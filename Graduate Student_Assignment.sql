create database Graduate_student1

CREATE TABLE DIM_ADMISSION_DATE(
 DATESK int NOT NULL,
 FULLDATEAK datetime NOT NULL,
 DAYNUMBEROFWEEK int NOT NULL,
 DAYNAMEOFWEEK char(10) NOT NULL,
 DAYNUMBEROFMONTH int NOT NULL,
 DAYNUMBEROFYEAR int NOT NULL,
 WEEKNUMBEROFYEAR int NOT NULL,
 MONTHNAME char(10) NOT NULL,
 MONTHNUMBEROFYEAR int NOT NULL,
 CALENDERQUARTER datetime NOT NULL,
 CALENDERYEAR datetime NOT NULL,
 SOR_ID int NOT NULL,
 SOR_LOAD_DATE datetime NULL,
 SOR_UPDATE_DATE datetime NULL,
 DI_JOB_ID int NULL,
 DI_CREATE_DATE datetime NULL,
 DI_MODIFIED_DATE datetime NULL,
 UNIVERSITY_SK int NULL,
 CONSTRAINT PK15 PRIMARY KEY CLUSTERED (DATESK)
)
go
IF OBJECT_ID('DIM_ADMISSION_DATE') IS NOT NULL
 PRINT '<<< CREATED TABLE DIM_ADMISSION_DATE >>>'
ELSE
 PRINT '<<< FAILED CREATING TABLE DIM_ADMISSION_DATE >>>'
go
/*
 * TABLE: DIM_CORE_COURSE
 */
CREATE TABLE DIM_CORE_COURSE(
 CORE_COURSE_SK int NOT NULL,
 Name nvarchar(120) NULL,
 CORE_COURSE_CRN int NULL,
 CORE_COURSE_CREDITS int NULL,
 SOR_ID int NULL,
 SOR_LOAD_DATE datetime NULL,
 SOR_UPDATE_DATE datetime NULL,
 DI_JOB_ID int NULL,
 DI_CREATE_DATE datetime NULL,
 DI_MODIFIED_DATE datetime NULL,
 CONSTRAINT PK_Artist PRIMARY KEY CLUSTERED (CORE_COURSE_SK)
)
go
IF OBJECT_ID('DIM_CORE_COURSE') IS NOT NULL
 PRINT '<<< CREATED TABLE DIM_CORE_COURSE >>>'
ELSE
 PRINT '<<< FAILED CREATING TABLE DIM_CORE_COURSE >>>'
go
/*
 * TABLE: DIM_COURSE
 */
CREATE TABLE DIM_COURSE(
 COURSE_SK int NOT NULL,
 COURSE_DURATION datetime NULL,
 UNITPRICE money NULL,
 CREDITS int NULL,
 COURSE_CRN int NULL,
 SOR_ID int NULL,
 SOR_LOAD_DATE datetime NULL,
 SOR_UPDATE_DATE datetime NULL,
 DI_JOB_ID int NULL,
 DI_CREATE_DATE datetime NULL,
 DI_MODIFIED_DATE datetime NULL,
 ELECTIVE_COURSE_SK int NULL,
 CORE_COURSE_SK int NULL,
 COURSEFEES_SK int NULL,
 COURSE_CREDIT_SK char(10) NULL,
 SEMESTER_SK int NULL,
 CONSTRAINT PK17 PRIMARY KEY CLUSTERED (COURSE_SK)
)
go
IF OBJECT_ID('DIM_COURSE') IS NOT NULL
 PRINT '<<< CREATED TABLE DIM_COURSE >>>'
ELSE
 PRINT '<<< FAILED CREATING TABLE DIM_COURSE >>>'
go
/*
 * TABLE: DIM_COURSE_CREDIT
 */
CREATE TABLE DIM_COURSE_CREDIT(
 SOR_ID int NULL,
 COURSE_CREDIT_SK char(10) NOT NULL,
 SOR_LOAD_DATE datetime NULL,
 SOR_UPDATE_DATE datetime NULL,
 DI_STUDENT_ID int NULL,
 DI_CREATE_DATE datetime NULL,
 DI_MODIFIED_DATE datetime NULL,
 COURSEFEES_SK int NULL,
 CONSTRAINT PK_PlaylistTrack PRIMARY KEY CLUSTERED (COURSE_CREDIT_SK)
)
go
IF OBJECT_ID('DIM_COURSE_CREDIT') IS NOT NULL
 PRINT '<<< CREATED TABLE DIM_COURSE_CREDIT >>>'
ELSE
 PRINT '<<< FAILED CREATING TABLE DIM_COURSE_CREDIT >>>'
go
/*
 * TABLE: DIM_COURSE_FEES
 */
CREATE TABLE DIM_COURSE_FEES(
 COURSEFEES_SK int NOT NULL,
 STUDENT_ID int NULL,
 NU_ID int NULL,
 FEE_DUE money NULL,
 CREDITS char(10) NULL,
 SOR_ID int NULL,
 SOR_LOAD_DATE datetime NULL,
 SOR_UPDATE_DATE datetime NULL,
 DI_JOB_ID int NULL,
 DI_CREATE_DATE datetime NULL,
 DI_MODIFIED_DATE datetime NULL,
 CONSTRAINT PK_Playlist PRIMARY KEY CLUSTERED (COURSEFEES_SK)
)
go
IF OBJECT_ID('DIM_COURSE_FEES') IS NOT NULL
 PRINT '<<< CREATED TABLE DIM_COURSE_FEES >>>'
ELSE
 PRINT '<<< FAILED CREATING TABLE DIM_COURSE_FEES >>>'
go
/*
 * TABLE: DIM_DEPARTMENT
 */
CREATE TABLE DIM_DEPARTMENT(
 CustomerId int NOT NULL,
 DI_MODIFIED_DATE datetime NULL,
 DI_CREATE_DATE datetime NULL,
 DI_JOB_ID int NOT NULL,
 SORUPDATEDATE datetime NULL,
 SORLOAdDATE datetime NULL,
 SOR_ID int NOT NULL,
 DEPARTMENT_SK int NOT NULL,
 FirstName nvarchar(40) NOT NULL,
 LastName nvarchar(20) NOT NULL,
 Company int NULL,
 Address nvarchar(70) NULL,
 City nvarchar(40) NULL,
 State nvarchar(40) NULL,
 Country nvarchar(40) NULL,
 PostalCode nvarchar(10) NULL,
 Phone nvarchar(24) NULL,
 Fax nvarchar(24) NULL,
 UNIVERSITY_SK int NULL,
 PROFESSORSK int NOT NULL,
 CONSTRAINT PK_Customer PRIMARY KEY CLUSTERED (DEPARTMENT_SK)
)
go
IF OBJECT_ID('DIM_DEPARTMENT') IS NOT NULL
 PRINT '<<< CREATED TABLE DIM_DEPARTMENT >>>'
ELSE
 PRINT '<<< FAILED CREATING TABLE DIM_DEPARTMENT >>>'
go
/*
 * TABLE: DIM_ELECTIVE_COURSE
 */
CREATE TABLE DIM_ELECTIVE_COURSE(
 ELECTIVE_COURSE_SK int NOT NULL,
 ELECTIVE_COURSE_ID int NULL,
 Title nvarchar(160) NOT NULL,
 ELECTIVE_COURSE_CREDITS int NULL,
 ELECTIVE_COURSE_CRN int NULL,
 SOR_ID int NULL,
 SOR_LOAD_DATE datetime NULL,
 SOR_UPDATE_DATE datetime NULL,
 DI_STUDENT_ID int NULL,
 DI_CREATE_DATE datetime NULL,
 DI_MODIFIED_DATE datetime NULL,
 CORE_COURSE_SK int NOT NULL,
 CONSTRAINT PK_Album PRIMARY KEY CLUSTERED (ELECTIVE_COURSE_SK)
)
go
IF OBJECT_ID('DIM_ELECTIVE_COURSE') IS NOT NULL
 PRINT '<<< CREATED TABLE DIM_ELECTIVE_COURSE >>>'
ELSE
 PRINT '<<< FAILED CREATING TABLE DIM_ELECTIVE_COURSE >>>'
go
/*
 * TABLE: DIM_PROFESSOR
 */
CREATE TABLE DIM_PROFESSOR(
 PROFESSORSK int NOT NULL,
 COURSE_ID int NULL,
 DI_CREATE_DATE datetime NULL,
 DI_MODIFIED_DATE datetime NULL,
 STATE char(10) NULL,
 COUNTRY char(10) NULL,
 SOR_ID int NULL,
 SOR_LOAD_DATE datetime NULL,
 SOR_UPDATE_DATE datetime NULL,
 DI_JOB_ID int NOT NULL,
 PROFESSOR_COURSE char(10) NULL,
 COURSE_SK int NULL,
 CONSTRAINT PK12 PRIMARY KEY CLUSTERED (PROFESSORSK)
)
go
IF OBJECT_ID('DIM_PROFESSOR') IS NOT NULL
 PRINT '<<< CREATED TABLE DIM_PROFESSOR >>>'
ELSE
 PRINT '<<< FAILED CREATING TABLE DIM_PROFESSOR >>>'
go
/*
 * TABLE: DIM_SEMESTER
 */
CREATE TABLE DIM_SEMESTER(
 SEMESTER_SK int NOT NULL,
 SEMESTER_ID int NULL,
 SEMESTER_TYPE char(10) NULL,
 SEMESTER_DURATION datetime NULL,
 STUDENT_ID int NULL,
 NU_ID int NULL,
 SOR_ID int NULL,
 SOR_LOAD_DATE datetime NULL,
 SOR_UPDATE_DATE datetime NULL,
 DI_STUDENT_ID int NULL,
 StudentSK int NULL,
 CONSTRAINT PK22 PRIMARY KEY CLUSTERED (SEMESTER_SK)
)
go
IF OBJECT_ID('DIM_SEMESTER') IS NOT NULL
 PRINT '<<< CREATED TABLE DIM_SEMESTER >>>'
ELSE
 PRINT '<<< FAILED CREATING TABLE DIM_SEMESTER >>>'
go
/*
 * TABLE: DIM_SERVICES
 */
CREATE TABLE DIM_SERVICES(
 SERVICES_SK int NOT NULL,
 SERVICE_TYPE char(10) NULL,
 SERVICE_NAME char(10) NULL,
 OFFICE_LOCATION char(10) NULL,
 STUDENT_ID int NULL,
 NU_ID char(10) NULL,
 UNIVERSITY_SK int NULL,
 CONSTRAINT PK20 PRIMARY KEY CLUSTERED (SERVICES_SK)
)
go
IF OBJECT_ID('DIM_SERVICES') IS NOT NULL
 PRINT '<<< CREATED TABLE DIM_SERVICES >>>'
ELSE
 PRINT '<<< FAILED CREATING TABLE DIM_SERVICES >>>'
go
/*
 * TABLE: Dim_UNIVERSITY
 */
CREATE TABLE Dim_UNIVERSITY(
 DI_MODIFIED_DATE datetime NULL,
 DI_CREATE_DATE datetime NULL,
 DI_JOB_ID int NOT NULL,
 SOR_UPDATEDATE datetime NULL,
 UNIVERSITY_SK int NOT NULL,
 REPORTSTOSK int NULL,
 SOR_ID int NOT NULL,
 SOR_LOADDATE datetime NULL,
 LastName nvarchar(20) NOT NULL,
 Address nvarchar(70) NULL,
 City nvarchar(40) NULL,
 State nvarchar(40) NULL,
 Country nvarchar(40) NULL,
 PostalCode nvarchar(10) NULL,
 Phone nvarchar(24) NULL,
 Fax nvarchar(24) NULL,
 Email nvarchar(60) NULL,
 PROFESSORSK int NULL,
 CONSTRAINT PK_Employee PRIMARY KEY CLUSTERED (UNIVERSITY_SK)
)
go
IF OBJECT_ID('Dim_UNIVERSITY') IS NOT NULL
 PRINT '<<< CREATED TABLE Dim_UNIVERSITY >>>'
ELSE
 PRINT '<<< FAILED CREATING TABLE Dim_UNIVERSITY >>>'
go
/*
 * TABLE: FACT_STUDENT
 */
CREATE TABLE FACT_STUDENT(
 StudentSK int NOT NULL,
 STUDENT_ID int NULL,
 INVOICEDATE char(18) NULL,
 STUDENT_FIRSTNAME char(10) NULL,
 BILLINGADDRESS char(10) NULL,
 Student_type char(10) NULL,
 STUDENT_STATUS char(10) NULL,
 BILLINGPOSTALCODE int NULL,
 SALESQUANTITY char(18) NULL,
 SALESAMOUNT int NULL,
 INVOICELINEID int NULL,
 INVOICEID float NULL,
 SOR_ID int NULL,
 SOR_LOAD_DATE datetime NULL,
 SOR_UPDATE_DATE datetime NULL,
 DI_JOB_ID int NULL,
 DI_CREATE_DATE datetime NULL,
 DI_MODIFIED_DATE datetime NULL,
 PROFESSORSK int NOT NULL,
 DATESK int NOT NULL,
 COURSE_SK int NOT NULL,
 DEPARTMENT_SK int NOT NULL,
 CONSTRAINT PK16 PRIMARY KEY CLUSTERED (StudentSK)
)
go
IF OBJECT_ID('FACT_STUDENT') IS NOT NULL
 PRINT '<<< CREATED TABLE FACT_STUDENT >>>'
ELSE
 PRINT '<<< FAILED CREATING TABLE FACT_STUDENT >>>'
go
/*
 * VIEW: DATE_DATEOFBIRTH
 */
CREATE VIEW DATE_DATEOFBIRTH AS
SELECT DI.DATESK, DI.FULLDATEAK, DI.DAYNUMBEROFWEEK, DI.DAYNAMEOFWEEK, DI.DAYNUMBEROFMONTH, DI.DAYNUMBEROFYEAR, DI.WEEKNUMBEROFYEAR, DI.MONTHNAME, DI.MONTHNUMBEROFYEAR, DI.CALENDERQUARTER, DI.CALENDERYEAR
FROM DIM_ADMISSION_DATE DI
go
IF OBJECT_ID('DATE_DATEOFBIRTH') IS NOT NULL
 PRINT '<<< CREATED VIEW DATE_DATEOFBIRTH >>>'
ELSE
 PRINT '<<< FAILED CREATING VIEW DATE_DATEOFBIRTH >>>'
go
/*
 * VIEW: STUDENT_SERVICES
 */
CREATE VIEW STUDENT_SERVICES AS
SELECT DI.STUDENT_ID, DI.NU_ID, DI.OFFICE_LOCATION, DI.SERVICE_NAME, DI.SERVICE_TYPE
FROM DIM_SERVICES DI
go
IF OBJECT_ID('STUDENT_SERVICES') IS NOT NULL
 PRINT '<<< CREATED VIEW STUDENT_SERVICES >>>'
ELSE
 PRINT '<<< FAILED CREATING VIEW STUDENT_SERVICES >>>'
go
/*
 * INDEX: Ref473
 */
CREATE INDEX Ref473 ON DIM_ADMISSION_DATE(UNIVERSITY_SK)
go
IF EXISTS (SELECT * FROM sys.indexes WHERE object_id=OBJECT_ID('DIM_ADMISSION_DATE') AND name='Ref473')
 PRINT '<<< CREATED INDEX DIM_ADMISSION_DATE.Ref473 >>>'
ELSE
 PRINT '<<< FAILED CREATING INDEX DIM_ADMISSION_DATE.Ref473 >>>'
go
/*
 * INDEX: Ref965
 */
CREATE INDEX Ref965 ON DIM_COURSE(COURSEFEES_SK)
go
IF EXISTS (SELECT * FROM sys.indexes WHERE object_id=OBJECT_ID('DIM_COURSE') AND name='Ref965')
 PRINT '<<< CREATED INDEX DIM_COURSE.Ref965 >>>'
ELSE
 PRINT '<<< FAILED CREATING INDEX DIM_COURSE.Ref965 >>>'
go
/*
 * INDEX: Ref1066
 */
CREATE INDEX Ref1066 ON DIM_COURSE(COURSE_CREDIT_SK)
go
IF EXISTS (SELECT * FROM sys.indexes WHERE object_id=OBJECT_ID('DIM_COURSE') AND name='Ref1066')
 PRINT '<<< CREATED INDEX DIM_COURSE.Ref1066 >>>'
ELSE
 PRINT '<<< FAILED CREATING INDEX DIM_COURSE.Ref1066 >>>'
go
/*
 * INDEX: Ref2271
 */
CREATE INDEX Ref2271 ON DIM_COURSE(SEMESTER_SK)
go
IF EXISTS (SELECT * FROM sys.indexes WHERE object_id=OBJECT_ID('DIM_COURSE') AND name='Ref2271')
 PRINT '<<< CREATED INDEX DIM_COURSE.Ref2271 >>>'
ELSE
 PRINT '<<< FAILED CREATING INDEX DIM_COURSE.Ref2271 >>>'
go
/*
 * INDEX: Ref138
 */
CREATE INDEX Ref138 ON DIM_COURSE(ELECTIVE_COURSE_SK)
go
IF EXISTS (SELECT * FROM sys.indexes WHERE object_id=OBJECT_ID('DIM_COURSE') AND name='Ref138')
 PRINT '<<< CREATED INDEX DIM_COURSE.Ref138 >>>'
ELSE
 PRINT '<<< FAILED CREATING INDEX DIM_COURSE.Ref138 >>>'
go
/*
 * INDEX: Ref239
 */
CREATE INDEX Ref239 ON DIM_COURSE(CORE_COURSE_SK)
go
IF EXISTS (SELECT * FROM sys.indexes WHERE object_id=OBJECT_ID('DIM_COURSE') AND name='Ref239')
 PRINT '<<< CREATED INDEX DIM_COURSE.Ref239 >>>'
ELSE
 PRINT '<<< FAILED CREATING INDEX DIM_COURSE.Ref239 >>>'
go
/*
 * INDEX: Ref968
 */
CREATE INDEX Ref968 ON DIM_COURSE_CREDIT(COURSEFEES_SK)
go
IF EXISTS (SELECT * FROM sys.indexes WHERE object_id=OBJECT_ID('DIM_COURSE_CREDIT') AND name='Ref968')
 PRINT '<<< CREATED INDEX DIM_COURSE_CREDIT.Ref968 >>>'
ELSE
 PRINT '<<< FAILED CREATING INDEX DIM_COURSE_CREDIT.Ref968 >>>'
go
/*
 * INDEX: FK_CustomerSupportRepId
 */
CREATE INDEX FK_CustomerSupportRepId ON DIM_DEPARTMENT(UNIVERSITY_SK)
go
IF EXISTS (SELECT * FROM sys.indexes WHERE object_id=OBJECT_ID('DIM_DEPARTMENT') AND name='FK_CustomerSupportRepId')
 PRINT '<<< CREATED INDEX DIM_DEPARTMENT.FK_CustomerSupportRepId >>>'
ELSE
 PRINT '<<< FAILED CREATING INDEX DIM_DEPARTMENT.FK_CustomerSupportRepId >>>'
go
/*
 * INDEX: Ref1219
 */
CREATE INDEX Ref1219 ON DIM_DEPARTMENT(PROFESSORSK)
go
IF EXISTS (SELECT * FROM sys.indexes WHERE object_id=OBJECT_ID('DIM_DEPARTMENT') AND name='Ref1219')
 PRINT '<<< CREATED INDEX DIM_DEPARTMENT.Ref1219 >>>'
ELSE
 PRINT '<<< FAILED CREATING INDEX DIM_DEPARTMENT.Ref1219 >>>'
go
/*
 * INDEX: Ref249
 */
CREATE INDEX Ref249 ON DIM_ELECTIVE_COURSE(CORE_COURSE_SK)
go
IF EXISTS (SELECT * FROM sys.indexes WHERE object_id=OBJECT_ID('DIM_ELECTIVE_COURSE') AND name='Ref249')
 PRINT '<<< CREATED INDEX DIM_ELECTIVE_COURSE.Ref249 >>>'
ELSE
 PRINT '<<< FAILED CREATING INDEX DIM_ELECTIVE_COURSE.Ref249 >>>'
go
/*
 * INDEX: Ref1758
 */
CREATE INDEX Ref1758 ON DIM_PROFESSOR(COURSE_SK)
go
IF EXISTS (SELECT * FROM sys.indexes WHERE object_id=OBJECT_ID('DIM_PROFESSOR') AND name='Ref1758')
 PRINT '<<< CREATED INDEX DIM_PROFESSOR.Ref1758 >>>'
ELSE
 PRINT '<<< FAILED CREATING INDEX DIM_PROFESSOR.Ref1758 >>>'
go
/*
 * INDEX: Ref1670
 */
CREATE INDEX Ref1670 ON DIM_SEMESTER(StudentSK)
go
IF EXISTS (SELECT * FROM sys.indexes WHERE object_id=OBJECT_ID('DIM_SEMESTER') AND name='Ref1670')
 PRINT '<<< CREATED INDEX DIM_SEMESTER.Ref1670 >>>'
ELSE
 PRINT '<<< FAILED CREATING INDEX DIM_SEMESTER.Ref1670 >>>'
go
/*
 * INDEX: Ref463
 */
CREATE INDEX Ref463 ON DIM_SERVICES(UNIVERSITY_SK)
go
IF EXISTS (SELECT * FROM sys.indexes WHERE object_id=OBJECT_ID('DIM_SERVICES') AND name='Ref463')
 PRINT '<<< CREATED INDEX DIM_SERVICES.Ref463 >>>'
ELSE
 PRINT '<<< FAILED CREATING INDEX DIM_SERVICES.Ref463 >>>'
go
/*
 * INDEX: Ref1250
 */
CREATE INDEX Ref1250 ON Dim_UNIVERSITY(PROFESSORSK)
go
IF EXISTS (SELECT * FROM sys.indexes WHERE object_id=OBJECT_ID('Dim_UNIVERSITY') AND name='Ref1250')
 PRINT '<<< CREATED INDEX Dim_UNIVERSITY.Ref1250 >>>'
ELSE
 PRINT '<<< FAILED CREATING INDEX Dim_UNIVERSITY.Ref1250 >>>'
go
/*
 * INDEX: FK_EmployeeReportsTo
 */
CREATE INDEX FK_EmployeeReportsTo ON Dim_UNIVERSITY(REPORTSTOSK)
go
IF EXISTS (SELECT * FROM sys.indexes WHERE object_id=OBJECT_ID('Dim_UNIVERSITY') AND name='FK_EmployeeReportsTo')
 PRINT '<<< CREATED INDEX Dim_UNIVERSITY.FK_EmployeeReportsTo >>>'
ELSE
 PRINT '<<< FAILED CREATING INDEX Dim_UNIVERSITY.FK_EmployeeReportsTo >>>'
go
/*
 * INDEX: Ref1744
 */
CREATE INDEX Ref1744 ON FACT_STUDENT(COURSE_SK)
go
IF EXISTS (SELECT * FROM sys.indexes WHERE object_id=OBJECT_ID('FACT_STUDENT') AND name='Ref1744')
 PRINT '<<< CREATED INDEX FACT_STUDENT.Ref1744 >>>'
ELSE
 PRINT '<<< FAILED CREATING INDEX FACT_STUDENT.Ref1744 >>>'
go
/*
 * INDEX: Ref346
 */
CREATE INDEX Ref346 ON FACT_STUDENT(DEPARTMENT_SK)
go
IF EXISTS (SELECT * FROM sys.indexes WHERE object_id=OBJECT_ID('FACT_STUDENT') AND name='Ref346')
 PRINT '<<< CREATED INDEX FACT_STUDENT.Ref346 >>>'
ELSE
 PRINT '<<< FAILED CREATING INDEX FACT_STUDENT.Ref346 >>>'
go
/*
 * INDEX: Ref1227
 */
CREATE INDEX Ref1227 ON FACT_STUDENT(PROFESSORSK)
go
IF EXISTS (SELECT * FROM sys.indexes WHERE object_id=OBJECT_ID('FACT_STUDENT') AND name='Ref1227')
 PRINT '<<< CREATED INDEX FACT_STUDENT.Ref1227 >>>'
ELSE
 PRINT '<<< FAILED CREATING INDEX FACT_STUDENT.Ref1227 >>>'
go
/*
 * INDEX: Ref1530
 */
CREATE INDEX Ref1530 ON FACT_STUDENT(DATESK)
go
IF EXISTS (SELECT * FROM sys.indexes WHERE object_id=OBJECT_ID('FACT_STUDENT') AND name='Ref1530')
 PRINT '<<< CREATED INDEX FACT_STUDENT.Ref1530 >>>'
ELSE
 PRINT '<<< FAILED CREATING INDEX FACT_STUDENT.Ref1530 >>>'
go
/*
 * TABLE: DIM_ADMISSION_DATE
 */
ALTER TABLE DIM_ADMISSION_DATE ADD CONSTRAINT RefDim_UNIVERSITY73
 FOREIGN KEY (UNIVERSITY_SK)
 REFERENCES Dim_UNIVERSITY(UNIVERSITY_SK)
go
/*
 * TABLE: DIM_COURSE
 */
ALTER TABLE DIM_COURSE ADD CONSTRAINT RefDIM_COURSE_FEES65
 FOREIGN KEY (COURSEFEES_SK)
 REFERENCES DIM_COURSE_FEES(COURSEFEES_SK)
go
ALTER TABLE DIM_COURSE ADD CONSTRAINT RefDIM_COURSE_CREDIT66
 FOREIGN KEY (COURSE_CREDIT_SK)
 REFERENCES DIM_COURSE_CREDIT(COURSE_CREDIT_SK)
go
ALTER TABLE DIM_COURSE ADD CONSTRAINT RefDIM_SEMESTER71
 FOREIGN KEY (SEMESTER_SK)
 REFERENCES DIM_SEMESTER(SEMESTER_SK)
go
ALTER TABLE DIM_COURSE ADD CONSTRAINT RefDIM_ELECTIVE_COURSE38
 FOREIGN KEY (ELECTIVE_COURSE_SK)
 REFERENCES DIM_ELECTIVE_COURSE(ELECTIVE_COURSE_SK)
go
ALTER TABLE DIM_COURSE ADD CONSTRAINT RefDIM_CORE_COURSE39
 FOREIGN KEY (CORE_COURSE_SK)
 REFERENCES DIM_CORE_COURSE(CORE_COURSE_SK)
go
/*
 * TABLE: DIM_COURSE_CREDIT
 */
ALTER TABLE DIM_COURSE_CREDIT ADD CONSTRAINT RefDIM_COURSE_FEES68
 FOREIGN KEY (COURSEFEES_SK)
 REFERENCES DIM_COURSE_FEES(COURSEFEES_SK)
go
/*
 * TABLE: DIM_DEPARTMENT
 */
ALTER TABLE DIM_DEPARTMENT ADD CONSTRAINT RefDIM_PROFESSOR19
 FOREIGN KEY (PROFESSORSK)
 REFERENCES DIM_PROFESSOR(PROFESSORSK)
go
ALTER TABLE DIM_DEPARTMENT ADD CONSTRAINT FK_CustomerSupportRepId
 FOREIGN KEY (UNIVERSITY_SK)
 REFERENCES Dim_UNIVERSITY(UNIVERSITY_SK)
go
/*
 * TABLE: DIM_ELECTIVE_COURSE
 */
ALTER TABLE DIM_ELECTIVE_COURSE ADD CONSTRAINT RefDIM_CORE_COURSE49
 FOREIGN KEY (CORE_COURSE_SK)
 REFERENCES DIM_CORE_COURSE(CORE_COURSE_SK)
go
/*
 * TABLE: DIM_PROFESSOR
 */
ALTER TABLE DIM_PROFESSOR ADD CONSTRAINT RefDIM_COURSE58
 FOREIGN KEY (COURSE_SK)
 REFERENCES DIM_COURSE(COURSE_SK)
go
/*
 * TABLE: DIM_SEMESTER
 */
ALTER TABLE DIM_SEMESTER ADD CONSTRAINT RefFACT_STUDENT70
 FOREIGN KEY (StudentSK)
 REFERENCES FACT_STUDENT(StudentSK)
go
/*
 * TABLE: DIM_SERVICES
 */
ALTER TABLE DIM_SERVICES ADD CONSTRAINT RefDim_UNIVERSITY63
 FOREIGN KEY (UNIVERSITY_SK)
 REFERENCES Dim_UNIVERSITY(UNIVERSITY_SK)
go
/*
 * TABLE: Dim_UNIVERSITY
 */
ALTER TABLE Dim_UNIVERSITY ADD CONSTRAINT RefDIM_PROFESSOR50
 FOREIGN KEY (PROFESSORSK)
 REFERENCES DIM_PROFESSOR(PROFESSORSK)
go
ALTER TABLE Dim_UNIVERSITY ADD CONSTRAINT FK_EmployeeReportsTo
 FOREIGN KEY (REPORTSTOSK)
 REFERENCES Dim_UNIVERSITY(UNIVERSITY_SK)
go
/*
 * TABLE: FACT_STUDENT
 */
ALTER TABLE FACT_STUDENT ADD CONSTRAINT RefDIM_COURSE44
 FOREIGN KEY (COURSE_SK)
 REFERENCES DIM_COURSE(COURSE_SK)
go
ALTER TABLE FACT_STUDENT ADD CONSTRAINT RefDIM_DEPARTMENT46
 FOREIGN KEY (DEPARTMENT_SK)
 REFERENCES DIM_DEPARTMENT(DEPARTMENT_SK)
go
ALTER TABLE FACT_STUDENT ADD CONSTRAINT RefDIM_PROFESSOR27
 FOREIGN KEY (PROFESSORSK)
 REFERENCES DIM_PROFESSOR(PROFESSORSK)
go
ALTER TABLE FACT_STUDENT ADD CONSTRAINT RefDIM_ADMISSION_DATE30
 FOREIGN KEY (DATESK)
 REFERENCES DIM_ADMISSION_DATE(DATESK)
go